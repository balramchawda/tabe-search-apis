const mongoose = require("mongoose");
const schema = new mongoose.Schema(
  {
    isCancellable: { type: Boolean, default: false },
    isReturnable: { type: Boolean, default: false },
    related: { type: Boolean, default: false },
    sellerPickupReturn: { type: Boolean, default: false },
    subCategoryId: { type: String },
    packagedFood: { type: Boolean, default: false },
    context: { type: Object, default: {} },
    store: { type: Object, default: {} },
    bppDescriptor: { type: Object, default: {} },
    productName: { type: String, default: "" },
    description: { type: String, default: "" },
    productId: { type: String, default: "" },
    time: { type: Object, default: {} },
    productImages: { type: Array, default: [] },
    symbol: { type: String, default: "" },
    weight: { type: String, default: "" },
    weightUnit: { type: String, default: "" },
    availableQuantity: { type: Number, default: 0 },
    maximumQuantity: { type: Number, default: 0 },
    price: { type: Number, default: 0 },
    maximumPrice: { type: Number, default: 0 },
    currency: { type: String, default: "" },
    location_id: { type: String, default: "" },
    categoryId: { type: String, default: "" },
    raw: { type: Object, default: {} },
    // variants: { type: Object, default: {} },
    foodType: { type: String, enum: ["veg", "non-veg"] },
    statutory_reqs_packaged_commodities: { type: Object },
    statutory_reqs_prepackaged_food: { type: Object },
    nutritionalInfo: { type: Object },
    skuCode: { type: String },
    brand: { type: String },
    code: { type: String },
    parentCatalogId: { type: String, default: "" },
    providerId: { type: String, default: "" },
    returnWindowTime: { type: String },
    timeToShip: { type: Number, default: 0 },
    contact_details_consumer_care: { type: String },
    fulfillment_id: { type: String },
    code: { type: String },
    codeType: { type: String },
    status: { type: String },
    category: { type: String },
    rating: { type: Number}
  },
  { timestamps: true }
);
module.exports = mongoose.model("buyerappcatalogue", schema);

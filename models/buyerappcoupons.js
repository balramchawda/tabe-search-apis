var mongoose = require('mongoose');
var buyerAppCouponSchema = new mongoose.Schema({
    couponCode: { type: String, default: "" },
    couponName: { type: String, default: "" },
    couponDescription: { type: String, default: "" },
    discountType: { type: String, default: "" },
    couponDiscount: { type: String, default: "" },
    minimumOrderValue: { type: Number, default: 0 },
    maximumOrderValue: { type: Number, default: 0 },
    applyAll: { type: String, default: "" },
    applyPerticularSellerNP: { type: Array, default: [] },
    limitPUser: { type: Number, default: 0 },
    perDay: { type: Number, default: 0 },
    perweek: { type: Number, default: 0 },
    perMonth: { type: Number, default: 0 },
    limitPStore: { type: Number, default: 0 },
    storePerDay: { type: Number, default: 0 },
    storePerWeek: { type: Number, default: 0 },
    storePerMonth: { type: Number, default: 0 },
    couponTC: { type: String, default: "" },
    startDate: { type: Date },
    endDate: { type: Date },
    maximumOrderValue: { type: Number, default: 0 },
    providerId: { type: Array, default: [] },
    status: { type: Boolean, default: false },
    maximumDiscountAmount: { type: Number, default: 0 },
    couponLimit: { type: Number, default: 0 },
    appType: { type: String, enum: ['Kiko', 'Tabe','Micro'], default: 'Kiko' },
    isForQC: { type: Boolean, default: false },
});
module.exports = mongoose.model('buyerappcoupons', buyerAppCouponSchema);